# PAGE 4: Greeks Hedging Strategy
elif page == "Greeks Hedging Strategy":
    st.title("ðŸ§® Greeks Hedging Strategies")
    
    st.markdown("""
    This page demonstrates **hedging Delta and Gamma step by step**:
    
    1. **Delta Hedging**: Buy/sell the underlying stock to neutralize Delta today.  
    2. **Gamma Hedging**: If Gamma â‰  0, your Delta will drift as stock moves; we add a second option to reduce Gamma, stabilizing Delta over price changes.  
    """)

    st.subheader("Step 1: Select Your Option")
    S = st.number_input("Spot Price (S)", value=100.0, step=1.0)
    K = st.number_input("Strike Price (K)", value=100.0, step=1.0)
    T = st.number_input("Time to Expiry (years)", value=0.5, step=0.1)
    r = st.number_input("Risk-Free Rate (r)", value=0.02, step=0.01)
    sigma = st.number_input("Volatility (Ïƒ)", value=0.2, step=0.01)
    option_type = st.selectbox("Option Type", ["call", "put"])

    # Original Greeks
    delta, gamma, vega, theta, rho = greeks(S, K, T, r, sigma, option_type)
    st.markdown(f"**Original Option Greeks:** Delta={delta:.3f}, Gamma={gamma:.3f}")

    # -------------------------------
    # DELTA HEDGING
    # -------------------------------
    st.subheader("Step 2: Delta Hedging")
    st.markdown("""
    Delta hedging involves buying/selling the underlying stock to neutralize the option's Delta **today**.
    """)
    delta_hedge_qty = -delta
    st.write(f"To delta-hedge, buy/sell **{delta_hedge_qty:.2f} shares** of the underlying.")

    # Visualize Delta hedged payoff
    S_range = np.linspace(S*0.7, S*1.3, 100)
    payoff_option = np.maximum(S_range - K,0) if option_type=="call" else np.maximum(K - S_range,0)
    payoff_delta_hedged = payoff_option + delta_hedge_qty*(S_range - S)

    fig, ax = plt.subplots(figsize=(8,4))
    ax.plot(S_range, payoff_option, label="Original Option")
    ax.plot(S_range, payoff_delta_hedged, label="Delta-Hedged Position")
    ax.axhline(0, color="black", linestyle="--")
    ax.axvline(S, color="blue", linestyle=":", label="Spot Price")
    ax.set_xlabel("Stock Price at Expiry")
    ax.set_ylabel("Payoff")
    ax.legend()
    st.pyplot(fig)

    # -------------------------------
    # GAMMA HEDGING
    # -------------------------------
    st.subheader("Step 3: Gamma Hedging")
    st.markdown("""
    Delta hedging works only at **todayâ€™s spot price**.  
    If Gamma â‰  0, Delta will **drift** as the stock moves.  
    To stabilize Delta over a range of stock prices, we add a second option to reduce Gamma.  
    """)

    # Example: second option with different strike
    K2 = round(1.05*S,2)
    delta2, gamma2, _, _, _ = greeks(S, K2, T, r, sigma, option_type)
    gamma_hedge_qty = -gamma / gamma2 if gamma2 != 0 else 0
    st.write(f"Add **{gamma_hedge_qty:.2f} units of option with strike {K2}** to reduce Gamma to near zero.")

    # Visualize effect of Delta + Gamma hedge
    payoff_leg2 = (S_range - K2) if option_type=="call" else (K2 - S_range)
    payoff_gamma_hedged = payoff_option + delta_hedge_qty*(S_range - S) + gamma_hedge_qty*np.maximum(payoff_leg2, 0)

    fig2, ax2 = plt.subplots(figsize=(8,4))
    ax2.plot(S_range, payoff_option, label="Original Option")
    ax2.plot(S_range, payoff_delta_hedged, label="Delta-Hedged")
    ax2.plot(S_range, payoff_gamma_hedged, label="Delta + Gamma Hedged")
    ax2.axhline(0, color="black", linestyle="--")
    ax2.axvline(S, color="blue", linestyle=":", label="Spot Price")
    ax2.set_xlabel("Stock Price at Expiry")
    ax2.set_ylabel("Payoff")
    ax2.legend()
    st.pyplot(fig2)

    st.markdown("""
    âœ… **Explanation:**  
    - The first hedge neutralizes Delta **today**, but as the stock moves, Delta drifts due to Gamma.  
    - Adding a second option reduces Gamma, keeping Delta more stable across price changes.  
    - This shows the principle of **dynamic hedging** in practice.
    """)
